@page "/Encuesta/Edit/{Id:int}"
@inject EncuestaServices EncuestaServices
@inject CiudadServices CiudadService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer


<PageTitle>Editar Encuesta</PageTitle>

@if (Encuesta == null)
{
    <p>Cargando...</p>
}
else
{
    <EditForm Model="Encuesta" OnValidSubmit="Modificar">
        <DataAnnotationsValidator />
        <div class="container">
            <div class="card shadow-lg">
                <div class="card-header text-center">
                    <h5 class="card-title">Editar Encuesta #@Encuesta.EncuestasId</h5>
                </div>

                <div class="card-body">
                    <div class="mb-3">
                        <label class="form-label"><strong>EncuestaId</strong></label>
                        <InputNumber class="form-control" @bind-Value="Encuesta.EncuestasId" readonly />
                    </div>

                    <div class="mb-3">
                        <label class="form-label"><strong>Fecha</strong></label>
                        <InputDate class="form-control" @bind-Value="Encuesta.Fecha" />
                    </div>

                    <div class="mb-3">
                        <label class="form-label"><strong>Asignatura</strong></label>
                        <InputText class="form-control" @bind-Value="Encuesta.Asignatura" />
                    </div>

                    <div class="border border-success p-3 mt-3">
                        <h5>Detalles de la Encuesta</h5>
                        <CiudadPicker Ciudades="ListaCiudades"
                                      CiudadId="DetalleSeleccionado.CiudadId"
                                      Monto="DetalleSeleccionado.MontoEncuesta"
                                      OnCiudadSelected="HandleCiudadSelected" />
                        <hr />
                        <table class="table table-light text-center">
                            <thead class="thead-light">
                                <tr class="text-center">
                                    <th>Ciudad</th>
                                    <th>Monto</th>
                                    <th>Acciones</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var detalle in Encuesta.EncuestaDetalles)
                                {
                                    <tr>
                                        <td>@detalle.Ciudad?.Nombre ?? "Sin ciudad"</td>
                                        <td>
                                            <InputNumber class="form-control"
                                                         @bind-Value="detalle.MontoEncuesta"
                                                         min="0"
                                                         @onblur="() => ActualizarDetalle(detalle)" />
                                        </td>
                                        <td>
                                            <button type="button"
                                                    class="btn btn-outline-danger bi bi-trash"
                                                    @onclick="() => RemoverDetalle(detalle)"></button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    <div class="row mt-3">
                        <div class="col-6 offset-6">
                            <div class="mb-3">
                                <label class="form-label"><strong>Monto Total</strong></label>
                                <label class="form-control text-end">
                                    <strong>@Encuesta.EncuestaDetalles.Sum(d => d.MontoEncuesta).ToString("N2")</strong>
                                </label>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="card-footer text-center mt-2">
                    <a href="/Encuestas/Index" class="btn btn-secondary">
                        <span class="bi bi-arrow-left"></span> Volver
                    </a>
                    <button type="submit" class="btn btn-primary bi bi-floppy">
                        Guardar
                    </button>
                </div>
            </div>
        </div>
    </EditForm>
}

@code {
    [Parameter] public int Id { get; set; }
    public Encuesta Encuesta { get; set; } = new Encuesta();
    public EncuestaDetalle DetalleSeleccionado { get; set; } = new();
    public List<Ciudad> ListaCiudades { get; set; } = new List<Ciudad>();

    protected override async Task OnInitializedAsync()
    {
        Encuesta = await EncuestaServices.Buscar(Id) ?? new Encuesta { Fecha = DateTime.Now };
        ListaCiudades = await CiudadService.Listar(c => true);
    }

    private async Task HandleCiudadSelected((Ciudad ciudad, decimal Monto) selection)
    {
        if (selection.ciudad == null || selection.ciudad.CiudadesId <= 0)
            return;

        var detalle = new EncuestaDetalle
        {
            CiudadId = selection.ciudad.CiudadesId,
            Ciudad = selection.ciudad,
            MontoEncuesta = (int)selection.Monto

        };

        Encuesta.EncuestaDetalles.Add(detalle);
        await InvokeAsync(StateHasChanged);
    }

    private void ActualizarDetalle(EncuestaDetalle detalle)
    {
        // Aquí puedes hacer validaciones o simplemente marcar el detalle como modificado.
        // Actualizamos el detalle dentro de la lista.
        var detalleExistente = Encuesta.EncuestaDetalles.FirstOrDefault(d => d.CiudadId == detalle.CiudadId);
        if (detalleExistente != null)
        {
            detalleExistente.MontoEncuesta = detalle.MontoEncuesta;
        }
    }

    public async Task Modificar()
    {
        var paso = await EncuestaServices.Guardar(Encuesta);
        if (paso)
        {
            NavigationManager.NavigateTo("/Encuestas/Index");
        }
    }

    public void RemoverDetalle(EncuestaDetalle detalle)
    {
        Encuesta.EncuestaDetalles.Remove(detalle);
        StateHasChanged();
    }
}
