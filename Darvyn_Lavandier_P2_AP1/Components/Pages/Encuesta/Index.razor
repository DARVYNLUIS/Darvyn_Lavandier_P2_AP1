@page "/Encuestas/Index"
@using Darvyn_Lavandier_P2_AP1.Services
@using Darvyn_Lavandier_P2_AP1.Models
@inject EncuestaService encuestaService
@inject NavigationManager navigationManager

<PageTitle>Listado de Encuestas</PageTitle>

<div class="container">
    <div class="card shadow-lg">
        <div class="card-header space-between">
            <h5 class="card-title">Registro Encuestas</h5>
            <a href="/Encuesta/Create" class="btn btn-primary">
                <span class="bi bi-plus-square mt-3"></span> Crear
            </a>
        </div>

        <div class="card-body">

            @*labels*@
            <div class="row">
                @*Filtrar por*@
                <div class="col-3">
                    <label class="col-form-label"><strong>Filtrar por</strong></label>
                </div>

                @*ValorFiltro*@
                <div class="col-4">
                    <label class="col-form-label"><strong>Búsqueda</strong></label>
                </div>
            </div>

            @*Inputs y botones*@
            <div class="row align-items-center">
                @*filtro*@
                <div class="col-3">
                    <InputSelect class="form-select" @bind-Value="Filtro">
                        <option value="" selected disabled>Elija una opción</option>
                        <option value="Asignatura">Asignatura</option>
                    </InputSelect>
                </div>

                @*Busqueda*@
                <div class="col-4">
                    <div class="input-group">
                        <input class="form-control" @bind="ValorFiltro" placeholder="Buscar" />
                        <button type="button" class="btn btn-outline-primary bi bi-search" @onclick="Buscar"></button>
                    </div>
                </div>

                @*Restablecer*@
                <div class="col-3">
                    <button type="button" class="btn btn-outline-secondary bi bi-arrow-counterclockwise" @onclick="Restablecer">
                    </button>
                </div>
            </div>

            <table class="table table-hover text-center mt-3">
                <thead class="table table-striped text-black">
                    <tr>
                        <th>EncuestaId</th>
                        <th>Fecha</th>
                        <th>Asignatura</th>
                        <th>Monto</th>
                        <th>Opciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var encuesta in ListaEncuestas)
                    {
                        <tr>
                            <td> @encuesta.EncuestaId</td>
                            <td> @encuesta.Fecha.ToShortDateString()</td>
                            <td> @encuesta.Asignatura</td>
                            <td> $@encuesta.Monto.ToString("N2")</td>

                            <td class="text-center">
                                <a href="/Encuesta/Edit/@encuesta.EncuestaId" class="btn btn-outline-primary bi bi-pencil-square"></a>
                                <a href="/Encuesta/Delete/@encuesta.EncuestaId" class="btn btn-outline-danger bi bi-trash"></a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="card-footer space-between">
            <label class="ms-3"><strong>Cantidad:</strong> @ListaEncuestas.Count</label>
            <div class="col-5">
                <label class="ms-5"><strong>Total Monto:</strong> $@ListaEncuestas.Sum(e => e.Monto).ToString("N2")</label>
            </div>
        </div>
    </div>
</div>

@code {
    public List<Encuesta> ListaEncuestas { get; set; } = new List<Encuesta>();

    public string Filtro { get; set; } = string.Empty;
    public string ValorFiltro { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        ListaEncuestas = await encuestaService.Listar(e => e.EncuestaId > 0);
    }

    private async Task Buscar()
    {
        if (ValorFiltro.Trim() != "" && Filtro == "Asignatura")
        {
            ListaEncuestas = await encuestaService.Listar(e => e.Asignatura.ToLower()
            .Contains(ValorFiltro.ToLower()));
        }
    }

    private async Task Restablecer()
    {
        ListaEncuestas = await encuestaService.Listar(e => e.EncuestaId > 0);
        Filtro = string.Empty;
        ValorFiltro = string.Empty;
    }

    private async Task Eliminar(int encuestaId)
    {
        var respuesta = await encuestaService.Eliminar(encuestaId);
        if (respuesta)
        {
            ListaEncuestas = await encuestaService.Listar(e => e.EncuestaId > 0);
        }
    }
}